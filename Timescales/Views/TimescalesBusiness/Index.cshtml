@model Timescales.Controllers.Helpers.PaginatedList<Timescales.Models.Timescale>

@{
    ViewData["Title"] = "Index";
    ViewData["Header"] = "businessTimescalesEditor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    <div class="form-group">
        @Html.TextBox("SearchString", null, new { @class = "form-control" })
        <p class="form-text text-muted">Look for an existing timescale</p>
        <input type="submit" class="btn btn-primary" value="Search" />
        <a class="btn btn-primary" asp-action="Index">Back to Full List</a>
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>
                <p class="text-muted">Placeholder</p>
            </th>
            <th>
                <p class="text-muted">Name</p>
            </th>
            <th>
                <p class="text-muted">Description</p>
            </th>
            <th>
                <p class="text-muted">Line Of Business</p>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Placeholder)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LineOfBusiness)
                </td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>
